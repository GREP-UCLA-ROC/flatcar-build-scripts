#!/usr/bin/env bash

set -e
shopt -s expand_aliases

if [ $# -ne 4 ] && [ $# -ne 5 ]; then
    echo "usage: ${0} DATA_DIR NEBRASKA_URL ORIGIN_SSH_URL VERSION [SUBDOMAIN]"
    exit 1
fi

if [ -z ${GITHUB_TOKEN} ]; then
    echo '$GITHUB_TOKEN needs to be defined'
    exit 1
fi

DATA_DIR="$1"
NEBRASKA_URL="$2"
ORIGIN_SSH_URL="$3"
VERSION="$4"
SUBDOMAIN="${5-update}"

ARCH="${ARCH:-amd64-usr}"
echo "Environment variable ARCH is specified as ${ARCH}"

COREOS_APP_ID="e96281a6-d1af-4bde-9a0a-97b76e56dc57"

. resty -W "${NEBRASKA_URL}/api" -H "Authorization: Bearer $GITHUB_TOKEN" \
	-H "Accept: application/json" -H "Content-Type: application/json"

function get_package_id() {
	local tmpfile="$(mktemp)"
	local package_id

	GET /apps/"${COREOS_APP_ID}"/packages >& ${tmpfile}
	if jq -e 'has("packages")' ${tmpfile} > /dev/null; then
		package_id=$(cat ${tmpfile} | jq '.packages' | jq '.[] | select(.version=="'${VERSION}'" and .arch=='${ARCH_ID}').id')
	else
		package_id=$(cat ${tmpfile} | jq '.[] | select(.version=="'${VERSION}'" and .arch=='${ARCH_ID}').id')
	fi
	rm -f ${tmpfile}

	echo ${package_id}
}

UPDATE_PATH="${DATA_DIR}/flatcar_production_update.gz"
UPDATE_CHECKSUM_PATH="${UPDATE_PATH}.sha256"
UPDATE_URL="https://${SUBDOMAIN}.release.flatcar-linux.net/${ARCH}/${VERSION}"/

PAYLOAD_SIZE=$(stat --format='%s' "${UPDATE_PATH}")
PAYLOAD_SHA1=$(cat "${UPDATE_PATH}" | openssl dgst -sha1 -binary | base64)
PAYLOAD_SHA256=$(cat "${UPDATE_PATH}" | openssl dgst -sha256 -binary | base64)

sha256sum "${UPDATE_PATH}" > "${UPDATE_CHECKSUM_PATH}"

echo "Copying update payload to update server"

SERVER_UPDATE_DIR="/var/www/origin.release.flatcar-linux.net/${SUBDOMAIN}/${ARCH}/${VERSION}/"
ssh "core@${ORIGIN_SSH_URL}" mkdir -p "${SERVER_UPDATE_DIR}"
scp "${UPDATE_PATH}" "${UPDATE_CHECKSUM_PATH}" "core@${ORIGIN_SSH_URL}:${SERVER_UPDATE_DIR}"

# Nebraska's arch enum values:
# https://github.com/kinvolk/nebraska/blob/953a1e672f42dea4530161a31756db239e0bb8aa/pkg/api/arch.go#L9
if [ "${ARCH}" = "amd64-usr" ]; then
  ARCH_ID=1
elif [ "${ARCH}" = "arm64-usr" ]; then
  ARCH_ID=2
else
  echo "Unknown ARCH ${ARCH}."
  exit 1
fi

if ! PACKAGE_ID=$(get_package_id); then
	echo "Failed to get metadata from Nebraska."
	echo "Please make sure that you have configured a valid GITHUB_TOKEN."
	exit 1
fi

echo "Uploading update payload"

if [ -z "${PACKAGE_ID}" ]; then
    if ! PACKAGE_ID=$(POST /apps/"${COREOS_APP_ID}"/packages " \
        {
            \"application_id\": \"${COREOS_APP_ID}\",
            \"arch\": ${ARCH_ID},
            \"channels_blacklist\": [],
            \"description\": \"Flatcar Linux ${VERSION}\",
            \"filename\": \"$(basename ${UPDATE_PATH})\",
            \"hash\": \"${PAYLOAD_SHA1}\",
            \"size\": \"${PAYLOAD_SIZE}\",
            \"type\": 1,
            \"url\": \"${UPDATE_URL}\",
            \"version\": \"${VERSION}\",
            \"flatcar_action\":
                {
                    \"sha256\": \"${PAYLOAD_SHA256}\"
                }
        }
        " 2>&1 | jq .id); then
		echo "Failed to update metadata on Nebraska."
		echo "Please make sure that you have configured a valid GITHUB_TOKEN."
		exit 1
	fi
else
    echo "Payload with version ${VERSION} already present. Skipping upload..."
    exit 1
fi

echo "Uploaded payload to Coreroller"
