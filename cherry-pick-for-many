#!/bin/bash

#
# Cherry picks multiple PRs to multiple flatcar maintenance
# branches. The script must be invoked from the repository.
#
# ./cherry-pick-for-many [pr1, [pr2, …]] -- version1 [version2, [version3, …]]
#
# For example, cherry-picking PRs 376 and 377 to branches flatcar-3033
# and flatcar-3139:
#
# ./cherry-pick-for-many 376 377 -- 3033 3139
#
# Environment variables:
#
# ORIGIN: Used to select which remote to use (forwarded to cherry-pick-for).
#

set -euo pipefail

cpf="$(dirname "${0}")/cherry-pick-for"

prs=()
flatcars=()

# 0 - add to prs, not 0 - add to flatcars
mode=0
for arg; do
	if [[ "${arg}" = '--' ]]; then
		mode=1
	elif [[ ${mode} -eq 0 ]]; then
		prs+=( "${arg}" )
	else
		flatcars+=( "${arg}" )
	fi
done

ORIGIN="${ORIGIN-origin}"

base="$(git remote get-url "${ORIGIN}")"
org_repo=''

case "${base}" in
    'git@github.com:'*)
        org_repo="${base#*:}"
        ;;
    'https://github.com/'*)
        org_repo="${base#*//*/}"
        ;;
    *)
        echo "Invalid remote '${base}', expected either 'git@github.com:<ORG>/<REPO>.git' or 'https://github.com/<ORG>/<REPO>.git'."
        exit 1
        ;;
esac
# drop .git
org_repo="${org_repo%.*}"
pull_base="https://github.com/${org_repo}/pull/"

for flatcar in "${flatcars[@]}"; do
	for pr in "${prs[@]}"; do
		ORIGIN="${ORIGIN}" "${cpf}" "flatcar-${flatcar}" "${pull_base}${pr}"
	done
done
